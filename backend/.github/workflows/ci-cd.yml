name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: crm
        ports: [5432:5432]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/crm
      JWT_SECRET: testsecret
      NEXT_PUBLIC_API_URL: http://localhost:4000
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install backend dependencies
        run: |
          cd backend
          npm ci
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
      - name: Lint backend
        run: |
          cd backend
          npm run lint
      - name: Lint frontend
        run: |
          cd frontend
          npm run lint
      - name: Build backend
        run: |
          cd backend
          npm run build
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      - name: Test backend (placeholder)
        run: echo "No backend tests yet"
      - name: Test frontend (placeholder)
        run: echo "No frontend tests yet"

  deploy-frontend:
    needs: lint-build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-backend:
    needs: lint-build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: railwayapp/cli-action@v1
        with:
          railwayToken: ${{ secrets.RAILWAY_TOKEN }}
          projectId: ${{ secrets.RAILWAY_PROJECT_ID }}
          serviceName: backend
          command: up
      - name: Run Prisma Migrate Deploy
        run: |
          cd backend
          npx prisma migrate deploy
      - name: Notify Sentry (optional)
        if: env.SENTRY_DSN != ''
        run: |
          curl https://sentry.io/api/hooks/release/builtin/xxx/xxx/ -X POST -H 'Content-Type: application/json' -d '{"version": "${{ github.sha }}"}' 